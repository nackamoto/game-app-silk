generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type GameSubmittedBy {
  i_nil String @map("-i:nil")
}

model game {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  About            String?
  AllowedCommands  String
  Colors           String[]
  Difficulty       String
  Id               String
  Items            String[]
  PointAllocated   String
  RateOfCompletion String
  RobotCol         String
  RobotDir         String
  RobotRow         String
  SubLengths       String[]
  /// Multiple data types found: String: 97.2%, GameSubmittedBy: 2.8% out of 143 sampled entries
  SubmittedBy      Json
  SubmittedDate    String
  Title            String
}

model campaign {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  duration      Int
  passScore     Int
  numOfAttempts Int
  games         Json
  dateCreated   DateTime @default(now())
}

model event {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  campaign  Json
  totPassed Int?
  totFailed Int?
  startDate String
  endDate   String
}

model user {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  username         String?
  firstName        String
  lastName         String
  email            String  @unique
  phoneNumber      String
  educationalLevel String
  password         String
  location         String?
  role             Role    @default(APPLICANT)
}

enum Role {
  APPLICANT
  ADMIN
}

model result {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  username     String
  email        String         @unique
  eventResults EventResults[]
  date         DateTime       @default(now())
}

model EventResults {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  eventId      String   @unique
  userId       String   @unique
  eventName    String
  score        Int
  attemptCount Int
  level        Int
  passScore    Int
  attempts     Json[]
  decision     Decision
  date         DateTime @default(now())
  result       result?  @relation(fields: [resultId], references: [id])
  resultId     String?  @db.ObjectId
}

enum Decision {
  START
  CONGRATS
  TRY_AGAIN
}
